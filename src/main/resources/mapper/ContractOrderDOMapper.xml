<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fota.trade.mapper.ContractOrderMapper">
    <resultMap id="BaseResultMap" type="com.fota.trade.domain.ContractOrderDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="gmt_create" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="gmt_modified" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="contract_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="contract_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="order_direction" jdbcType="TINYINT" javaType="java.lang.Integer"/>
            <arg column="operate_type" jdbcType="TINYINT" javaType="java.lang.Integer"/>
            <arg column="order_type" jdbcType="TINYINT" javaType="java.lang.Integer"/>
            <arg column="operate_direction" jdbcType="TINYINT" javaType="java.lang.Integer"/>
            <arg column="lever" jdbcType="TINYINT" javaType="java.lang.Integer"/>
            <arg column="total_amount" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="unfilled_amount" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="close_type" jdbcType="TINYINT" javaType="java.lang.Integer"/>
            <arg column="price" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="fee" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="usdk_locked_amount" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="position_locked_amount" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="average_price" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, gmt_create as gmtCreate, gmt_modified as gmtModified, user_id as userId, contract_id as contractId,
        contract_name as contractName,
        order_type as orderType,order_direction as orderDirection,
        operate_type as operateType, operate_direction as operateDirection, lever, total_amount as totalAmount,
        unfilled_amount as unfilledAmount, close_type as closeType, price, fee,
        usdk_locked_amount as usdkLockedAmount, position_locked_amount as positionLockedAmount, status, average_price as
        averagePrice
    </sql>

    <select id="notMatchOrderList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from trade_contract_order
        where id <![CDATA[ <= ]]> #{contractOrderIndex, jdbcType=INTEGER}
        and order_direction = #{orderDirection, jdbcType=INTEGER}
        and status in (#{placeOrder, jdbcType=INTEGER}, #{partialSuccess, jdbcType=INTEGER})
    </select>

    <insert id="insertSelective" parameterType="com.fota.trade.domain.ContractOrderDO" useGeneratedKeys="true"
            keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into trade_contract_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            gmt_modified,
            <if test="userId != null">
                user_id,
            </if>
            <if test="contractId != null">
                contract_id,
            </if>
            <if test="contractName != null">
                contract_name,
            </if>
            <if test="orderDirection != null">
                order_direction,
            </if>
            <if test="operateType != null">
                operate_type,
            </if>
            <if test="operateDirection != null">
                operate_direction,
            </if>
            <if test="lever != null">
                lever,
            </if>
            <if test="totalAmount != null">
                total_amount,
            </if>
            <if test="unfilledAmount != null">
                unfilled_amount,
            </if>
            <if test="closeType != null">
                close_type,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="fee != null">
                fee,
            </if>
            <if test="usdkLockedAmount != null">
                usdk_locked_amount,
            </if>
            <if test="positionLockedAmount != null">
                position_locked_amount,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="averagePrice != null">
                average_price,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            now(),
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="contractId != null">
                #{contractId,jdbcType=INTEGER},
            </if>
            <if test="contractName != null">
                #{contractName,jdbcType=VARCHAR},
            </if>
            <if test="orderDirection != null">
                #{orderDirection,jdbcType=TINYINT},
            </if>
            <if test="operateType != null">
                #{operateType,jdbcType=TINYINT},
            </if>
            <if test="operateDirection != null">
                #{operateDirection,jdbcType=TINYINT},
            </if>
            <if test="lever != null">
                #{lever,jdbcType=INTEGER},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=DECIMAL},
            </if>
            <if test="unfilledAmount != null">
                #{unfilledAmount,jdbcType=DECIMAL},
            </if>
            <if test="closeType != null">
                #{closeType,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="fee != null">
                #{fee,jdbcType=DECIMAL},
            </if>
            <if test="usdkLockedAmount != null">
                #{usdkLockedAmount,jdbcType=DECIMAL},
            </if>
            <if test="positionLockedAmount != null">
                #{positionLockedAmount,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="averagePrice != null">
                #{averagePrice,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fota.trade.domain.ContractOrderDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update trade_contract_order
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="contractId != null">
                contract_id = #{contractId,jdbcType=INTEGER},
            </if>
            <if test="contractName != null">
                contract_name = #{contractName,jdbcType=VARCHAR},
            </if>
            <if test="orderDirection != null">
                order_direction = #{orderDirection,jdbcType=TINYINT},
            </if>
            <if test="operateType != null">
                operate_type = #{operateType,jdbcType=TINYINT},
            </if>
            <if test="operateDirection != null">
                operate_direction = #{operateDirection,jdbcType=TINYINT},
            </if>
            <if test="lever != null">
                lever = #{lever,jdbcType=INTEGER},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount,jdbcType=DECIMAL},
            </if>
            <if test="unfilledAmount != null">
                unfilled_amount = #{unfilledAmount,jdbcType=DECIMAL},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="fee != null">
                fee = #{fee,jdbcType=DECIMAL},
            </if>
            <if test="usdkLockedAmount != null">
                usdk_locked_amount = #{usdkLockedAmount,jdbcType=DECIMAL},
            </if>
            <if test="positionLockedAmount != null">
                position_locked_amount = #{positionLockedAmount,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="averagePrice != null">
                average_price = #{averagePrice,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="countByQuery" resultType="java.lang.Integer">
        select count(*)
        from trade_contract_order
        where 1=1
        <if test="contractId > 0">
            and contract_id=#{contractId}
        </if>
        <if test="userId > 0">
            and user_id=#{userId}
        </if>
        <if test="startTime != null">
            and gmt_create &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            and gmt_create &lt; #{endTime}
        </if>
        <if test="orderStatus != null and orderStatus.size != 0">
            and status in
            <foreach item="item" index="index" collection="orderStatus" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="listByQuery" resultType="com.fota.trade.domain.ContractOrderDO">
        select
        <include refid="Base_Column_List"/>
        from trade_contract_order
        where 1=1
        <if test="contractId > 0">
            and contract_id=#{contractId,jdbcType=INTEGER}
        </if>
        <if test="userId > 0">
            and user_id=#{userId,jdbcType=BIGINT}
        </if>
        <if test="startTime != null">
            and gmt_create &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            and gmt_create &lt; #{endTime}
        </if>
        <if test="orderStatus != null and orderStatus.size != 0">
            and status in
            <foreach item="item" index="index" collection="orderStatus" open="(" separator="," close=")">
                #{item,jdbcType=INTEGER}
            </foreach>
        </if>
        order by gmt_create desc
        limit #{startRow,jdbcType=INTEGER}, #{endRow,jdbcType=INTEGER}
    </select>

    <update id="updateByFilledAmount">
    update trade_contract_order
    set gmt_modified = now(),
        unfilled_amount = unfilled_amount - #{filledAmount},
        status = #{status},
        average_price = #{averagePrice,jdbcType=DECIMAL}
    where id = #{orderId} and unfilled_amount - #{filledAmount} >= 0
  </update>

    <update id="updateAmountAndStatus">
    <bind name="lFilledAmount" value="filledAmount.longValue()"/>
    update trade_contract_order
    set gmt_modified = now()
        ,average_price = IF(total_amount - unfilled_amount + #{lFilledAmount}=0, null ,
        (IFNULL(average_price,0) * (total_amount - unfilled_amount) + #{filledPrice} * #{lFilledAmount}) / (total_amount - unfilled_amount + #{lFilledAmount}))
        ,status = IF(total_amount - (unfilled_amount - #{lFilledAmount}) > 0, 9,8)
        ,unfilled_amount = unfilled_amount - #{lFilledAmount}

    where id = #{orderId} and unfilled_amount - #{lFilledAmount} >= 0
  </update>

    <update id="updateStatus">
    update trade_contract_order
    set gmt_modified = now(),
    status = #{status}
    where id = #{id} and user_id = #{userId}
  </update>
</mapper>